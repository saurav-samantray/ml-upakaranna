version: "3.7"
services:

  backend:
    image: python:3.6
    volumes:
      - .:/src
      - venv:/src/venv
    command: ["/src/server/tools/dev-django.sh", "0.0.0.0:8000"]
    environment:
      ADMIN_USERNAME: "admin"
      ADMIN_PASSWORD: "password"
      ADMIN_EMAIL: "admin@example.com"
      DATABASE_URL: "postgres://doccano:doccano@postgres:5432/doccano?sslmode=disable"
      ALLOW_SIGNUP: "False"
      DEBUG: "True"
      DJANGO_ALLOWED_HOSTS: localhost 127.0.0.1 [::1]
      CELERY_BROKER: redis://redis:6379/0
      CELERY_BACKEND: redis://redis:6379/0
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - redis
    networks:
      - network-backend
      - network-frontend

  frontend:
    stdin_open: true
    image: node:13.2.0
    command: ["/src/client/dev-nuxt.sh"]
    volumes:
      - .:/src
      - node_modules:/src/client/node_modules
    ports:
      - 3000:3000
    depends_on:
      - backend
    networks:
      - network-frontend
    environment:
      - CHOKIDAR_USEPOLLING=true

  postgres:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: "doccano"
      POSTGRES_PASSWORD: "doccano"
      POSTGRES_DB: "doccano"
    networks:
      - network-backend

  redis:
    image: redis:5-alpine
    ports:
      - 6379:6379
    volumes:
        - redis_data:/data
    networks:
      - network-backend

  celery:
    image: upakaranna-backend
    command: celery worker --app app --loglevel=info
    volumes:
      - .:/src
      - venv:/src/venv
    depends_on:
      - redis
    networks:
      - network-backend

volumes:
  postgres_data:
  redis_data:
  node_modules:
  venv:

networks:
  network-backend:
  network-frontend: